<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20222.22.0624.2136                               -->
<workbook original-version='18.1' source-build='2022.2.0 (20222.22.0624.2136)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Orders (Sample - Superstore)' inline='true' name='federated.15sv1od1ldj4ea10rck7l1t2p62i' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.06fqptf13jejol15fdyfe0xlv3mi'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/hatic/OneDrive/Belgeler/Clarusway/DA_Data-Visualization-with-Tableau/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.06fqptf13jejol15fdyfe0xlv3mi' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.06fqptf13jejol15fdyfe0xlv3mi' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
            <column datatype='integer' name='Row ID' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State' ordinal='10' />
            <column datatype='integer' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C1CA29D8367F46EC98B7D1131AF812A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C1CA29D8367F46EC98B7D1131AF812A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C1CA29D8367F46EC98B7D1131AF812A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C1CA29D8367F46EC98B7D1131AF812A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C1CA29D8367F46EC98B7D1131AF812A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C1CA29D8367F46EC98B7D1131AF812A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C1CA29D8367F46EC98B7D1131AF812A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C1CA29D8367F46EC98B7D1131AF812A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C1CA29D8367F46EC98B7D1131AF812A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C1CA29D8367F46EC98B7D1131AF812A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C1CA29D8367F46EC98B7D1131AF812A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C1CA29D8367F46EC98B7D1131AF812A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C1CA29D8367F46EC98B7D1131AF812A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C1CA29D8367F46EC98B7D1131AF812A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C1CA29D8367F46EC98B7D1131AF812A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C1CA29D8367F46EC98B7D1131AF812A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C1CA29D8367F46EC98B7D1131AF812A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C1CA29D8367F46EC98B7D1131AF812A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C1CA29D8367F46EC98B7D1131AF812A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C1CA29D8367F46EC98B7D1131AF812A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_C1CA29D8367F46EC98B7D1131AF812A5]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name (Paul)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Customer Name]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;Paul&quot;'>
            <value>&quot;Paul Gonzalez&quot;</value>
            <value>&quot;Paul Knutson&quot;</value>
            <value>&quot;Paul Lucas&quot;</value>
            <value>&quot;Paul MacIntyre&quot;</value>
            <value>&quot;Paul Prost&quot;</value>
            <value>&quot;Paul Stevenson&quot;</value>
            <value>&quot;Paul Van Hugh&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Sub-Category Neg/Pos Profit' datatype='string' name='[Sub-Category (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
          <bin default-name='false' value='&quot;Negative&quot;'>
            <value>&quot;Bookcases&quot;</value>
            <value>&quot;Supplies&quot;</value>
            <value>&quot;Tables&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Positive&quot;'>
            <value>&quot;Accessories&quot;</value>
            <value>&quot;Appliances&quot;</value>
            <value>&quot;Art&quot;</value>
            <value>&quot;Binders&quot;</value>
            <value>&quot;Chairs&quot;</value>
            <value>&quot;Copiers&quot;</value>
            <value>&quot;Envelopes&quot;</value>
            <value>&quot;Fasteners&quot;</value>
            <value>&quot;Furnishings&quot;</value>
            <value>&quot;Labels&quot;</value>
            <value>&quot;Machines&quot;</value>
            <value>&quot;Paper&quot;</value>
            <value>&quot;Phones&quot;</value>
            <value>&quot;Storage&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='false' value='&quot;A&quot;'>
            <value>&quot;Accessories&quot;</value>
            <value>&quot;Appliances&quot;</value>
            <value>&quot;Art&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;B&quot;'>
            <value>&quot;Binders&quot;</value>
            <value>&quot;Bookcases&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;C&quot;'>
            <value>&quot;Chairs&quot;</value>
            <value>&quot;Copiers&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_C1CA29D8367F46EC98B7D1131AF812A5]' role='measure' type='quantitative' />
      <column-instance column='[Product Name Set]' derivation='InOut' name='[io:Product Name Set:nk]' pivot='key' type='nominal'>
        <aliases>
          <alias key='false' value='OUT' />
          <alias key='true' value='IN' />
        </aliases>
      </column-instance>
      <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sub-Category Set]' derivation='InOut' name='[io:Sub-Category Set:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <group caption='Product Name Sales Top 5' name='[Product Name Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Product Name]' member='&quot;Canon imageCLASS 2200 Advanced Copier&quot;' />
          <groupfilter function='member' level='[Product Name]' member='&quot;Cisco TelePresence System EX90 Videoconferencing Unit&quot;' />
          <groupfilter function='member' level='[Product Name]' member='&quot;Fellowes PB500 Electric Punch Plastic Comb Binding Machine with Manual Bind&quot;' />
          <groupfilter function='member' level='[Product Name]' member='&quot;GBC DocuBind TL300 Electric Binding System&quot;' />
          <groupfilter function='member' level='[Product Name]' member='&quot;HON 5400 Series Task Chairs for Big and Tall&quot;' />
        </groupfilter>
      </group>
      <group caption='Sub-Category Sales&gt;100K AND Profit&gt;=0' delimiter=',' name='[Set 1]' name-style='unqualified'>
        <groupfilter function='intersection'>
          <groupfilter field='[Sub-Category Profit &gt;= 0]' function='reference' />
          <groupfilter field='[Sub-CategorySales &gt; 100K]' function='reference' />
        </groupfilter>
      </group>
      <group caption='Sub-Category Profit &gt;= 0' name='[Sub-Category Profit &gt;= 0]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='SUM([Profit]) &gt;= 0.' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Sub-Category]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='Sub-Category Set 2' name='[Sub-Category Set 2]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='SUM([Sales])&gt; 100000 AND SUM([Profit]) &gt;= 0' function='filter' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Sub-Category]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='Sub-Category Sales&amp;Profit' name='[Sub-Category Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Accessories&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Binders&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Chairs&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Copiers&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Phones&quot;' />
          <groupfilter function='member' level='[Sub-Category]' member='&quot;Storage&quot;' />
        </groupfilter>
      </group>
      <group caption='Sub-CategorySales &gt; 100K' name='[Sub-CategorySales &gt; 100K]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='SUM([Sales]) &gt; 100000' function='filter' user:ui-marker='filter-by'>
          <groupfilter function='level-members' level='[Sub-Category]' user:ui-enumeration='all' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Category, Sub-Category'>
          <field>[Category]</field>
          <field>[Sub-Category]</field>
        </drill-path>
        <drill-path name='Geo'>
          <field>[Country/Region]</field>
          <field>[Region]</field>
          <field>[State]</field>
          <field>[City]</field>
          <field>[Postal Code]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' type='shape' />
          <encoding attr='color' field='[io:Sub-Category Set:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;East&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Sub-Category (group)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Labels&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;A&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Copiers&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Storage&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Machines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Envelopes&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Binders&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fasteners&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Supplies&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Tables&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Paper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Furnishings&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bookcases&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Phones&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Chairs&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Sub-Category (group) 1]' type='palette'>
            <map to='#59a14f'>
              <bucket>&quot;Positive&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Negative&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Set 1:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>true</bucket>
            </map>
            <map to='#e15759'>
              <bucket>false</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Turkey&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_C1CA29D8367F46EC98B7D1131AF812A5'>
            <properties context=''>
              <relation connection='excel-direct.06fqptf13jejol15fdyfe0xlv3mi' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Dyn Combined Set Ex.'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.15sv1od1ldj4ea10rck7l1t2p62i' />
          </datasources>
          <datasource-dependencies datasource='federated.15sv1od1ldj4ea10rck7l1t2p62i'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[io:Set 1:nk]' />
              <text column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Sub-Category:nk]' />
            </encodings>
            <reference-line axis-column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[sum:Sales:qk]' enable-instant-analytics='true' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='100000.0' value-column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[sum:Sales:qk]' z-order='1' />
            <reference-line axis-column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[sum:Profit:qk]' enable-instant-analytics='true' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='0.0' value-column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[sum:Profit:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.5712155103683472' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[sum:Profit:qk]</rows>
        <cols>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{0B0BA090-3D3A-43D3-ABD5-1171B664671B}' />
    </worksheet>
    <worksheet name='Dynamic Set &amp; Combined Set'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.15sv1od1ldj4ea10rck7l1t2p62i' />
          </datasources>
          <datasource-dependencies datasource='federated.15sv1od1ldj4ea10rck7l1t2p62i'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category Profit &gt;= 0]' derivation='InOut' name='[io:Sub-Category Profit &gt;= 0:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-CategorySales &gt; 100K]' derivation='InOut' name='[io:Sub-CategorySales &gt; 100K:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15sv1od1ldj4ea10rck7l1t2p62i].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.15sv1od1ldj4ea10rck7l1t2p62i].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[io:Sub-Category Profit &gt;= 0:nk]' value='21' />
            <format attr='width' field='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[:Measure Names]' value='140' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[io:Sub-Category Profit &gt;= 0:nk]' value='220' />
            <format attr='width' field='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[io:Sub-CategorySales &gt; 100K:nk]' value='228' />
            <format attr='width' field='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[io:Set 1:nk]' value='312' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Sub-Category:nk] / ([federated.15sv1od1ldj4ea10rck7l1t2p62i].[io:Sub-CategorySales &gt; 100K:nk] / ([federated.15sv1od1ldj4ea10rck7l1t2p62i].[io:Sub-Category Profit &gt;= 0:nk] / [federated.15sv1od1ldj4ea10rck7l1t2p62i].[io:Set 1:nk])))</rows>
        <cols>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{E9BD971C-1FEF-45BE-95C7-57949F9F99AD}' />
    </worksheet>
    <worksheet name='Fix Set'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.15sv1od1ldj4ea10rck7l1t2p62i' />
          </datasources>
          <datasource-dependencies datasource='federated.15sv1od1ldj4ea10rck7l1t2p62i'>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Product Name Set]' derivation='InOut' name='[io:Product Name Set:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='false' value='OUT' />
                <alias key='true' value='IN' />
              </aliases>
            </column-instance>
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Product Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[io:Product Name Set:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Product Name:nk]</rows>
        <cols>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{736D651B-E84C-4F60-BFC7-52912F5F389A}' />
    </worksheet>
    <worksheet name='Fix Set Ex.1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.15sv1od1ldj4ea10rck7l1t2p62i' />
          </datasources>
          <datasource-dependencies datasource='federated.15sv1od1ldj4ea10rck7l1t2p62i'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category Set]' derivation='InOut' name='[io:Sub-Category Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[io:Sub-Category Set:nk]' />
              <text column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Sub-Category:nk]' />
              <lod column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.3513259887695312' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[sum:Profit:qk]</rows>
        <cols>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{20FB8C8A-4D05-4895-9486-55B41CA6A187}' />
    </worksheet>
    <worksheet name='Fix Set Ex.2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.15sv1od1ldj4ea10rck7l1t2p62i' />
          </datasources>
          <datasource-dependencies datasource='federated.15sv1od1ldj4ea10rck7l1t2p62i'>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Discount]' derivation='Avg' name='[avg:Discount:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category Set]' derivation='InOut' name='[io:Sub-Category Set:nk]' pivot='key' type='nominal' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[io:Sub-Category Set:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[avg:Discount:qk]</rows>
        <cols>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[yr:Order Date:ok]</cols>
      </table>
      <simple-id uuid='{9F2E2C02-86B9-4174-9536-8D1035656485}' />
    </worksheet>
    <worksheet name='Group Ex.'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.15sv1od1ldj4ea10rck7l1t2p62i' />
          </datasources>
          <datasource-dependencies datasource='federated.15sv1od1ldj4ea10rck7l1t2p62i'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column caption='Sub-Category Neg/Pos Profit' datatype='string' name='[Sub-Category (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' new-bin='true'>
                <bin default-name='false' value='&quot;Negative&quot;'>
                  <value>&quot;Bookcases&quot;</value>
                  <value>&quot;Supplies&quot;</value>
                  <value>&quot;Tables&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Positive&quot;'>
                  <value>&quot;Accessories&quot;</value>
                  <value>&quot;Appliances&quot;</value>
                  <value>&quot;Art&quot;</value>
                  <value>&quot;Binders&quot;</value>
                  <value>&quot;Chairs&quot;</value>
                  <value>&quot;Copiers&quot;</value>
                  <value>&quot;Envelopes&quot;</value>
                  <value>&quot;Fasteners&quot;</value>
                  <value>&quot;Furnishings&quot;</value>
                  <value>&quot;Labels&quot;</value>
                  <value>&quot;Machines&quot;</value>
                  <value>&quot;Paper&quot;</value>
                  <value>&quot;Phones&quot;</value>
                  <value>&quot;Storage&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[Sub-Category (group) 1]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Sub-Category:nk]</rows>
        <cols>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[sum:Profit:qk]</cols>
      </table>
      <simple-id uuid='{1DA443C3-BF2B-47E4-8FFE-848AD8C04097}' />
    </worksheet>
    <worksheet name='Group/Create'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.15sv1od1ldj4ea10rck7l1t2p62i' />
          </datasources>
          <datasource-dependencies datasource='federated.15sv1od1ldj4ea10rck7l1t2p62i'>
            <column datatype='string' name='[Customer Name (Paul)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Customer Name]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;Paul&quot;'>
                  <value>&quot;Paul Gonzalez&quot;</value>
                  <value>&quot;Paul Knutson&quot;</value>
                  <value>&quot;Paul Lucas&quot;</value>
                  <value>&quot;Paul MacIntyre&quot;</value>
                  <value>&quot;Paul Prost&quot;</value>
                  <value>&quot;Paul Stevenson&quot;</value>
                  <value>&quot;Paul Van Hugh&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[Customer Name (Paul)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Customer Name:nk]</rows>
        <cols>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{5EEBB7C8-9FA7-4C61-BB27-D71EF4436A1D}' />
    </worksheet>
    <worksheet name='Group/View'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.15sv1od1ldj4ea10rck7l1t2p62i' />
          </datasources>
          <datasource-dependencies datasource='federated.15sv1od1ldj4ea10rck7l1t2p62i'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[Sub-Category (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[Sub-Category]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='false' value='&quot;A&quot;'>
                  <value>&quot;Accessories&quot;</value>
                  <value>&quot;Appliances&quot;</value>
                  <value>&quot;Art&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;B&quot;'>
                  <value>&quot;Binders&quot;</value>
                  <value>&quot;Bookcases&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;C&quot;'>
                  <value>&quot;Chairs&quot;</value>
                  <value>&quot;Copiers&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[Sub-Category (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Sub-Category:nk]</rows>
        <cols>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{51E1FE57-BBE5-4896-A892-16B58D5B1533}' />
    </worksheet>
    <worksheet name='Hierarchy'>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.15sv1od1ldj4ea10rck7l1t2p62i' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.15sv1od1ldj4ea10rck7l1t2p62i'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country/Region]' derivation='None' name='[none:Country/Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Postal Code]' derivation='None' name='[none:Postal Code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[Longitude (generated)]' field-type='quantitative' max='31291124.017250691' min='24946372.518177077' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[Latitude (generated)]' field-type='quantitative' max='6564995.1334943734' min='2909660.5613241903' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[sum:Sales:qk]' />
              <lod column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Country/Region:nk]' />
              <lod column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Region:nk]' />
              <lod column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:State:nk]' />
              <lod column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:City:nk]' />
              <lod column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Postal Code:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[Latitude (generated)]</rows>
        <cols>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{9AAFF727-7755-4E1A-97E2-7F4A17EA2206}' />
    </worksheet>
    <worksheet name='Sorting'>
      <layout-options>
        <caption>
          <formatted-text>
            <run fontcolor='#1d1c1d' fontname='Slack-Lato' fontsize='11'>●Single click options from  </run>
            <run>Æ&#10;</run>
            <run fontcolor='#1d1c1d' fontname='Slack-Lato' fontsize='11'>   ○ axis  </run>
            <run>Æ&#10;</run>
            <run fontcolor='#1d1c1d' fontname='Slack-Lato' fontsize='11'>   ○ header  </run>
            <run>Æ&#10;</run>
            <run fontcolor='#1d1c1d' fontname='Slack-Lato' fontsize='11'>   ○ field label </run>
            <run>Æ&#10;</run>
            <run fontcolor='#1d1c1d' fontname='Slack-Lato' fontsize='11'>●Sorting manually in headers and legends </run>
            <run>Æ&#10;</run>
            <run fontcolor='#1d1c1d' fontname='Slack-Lato' fontsize='11'>●Using the toolbar sort icons </run>
            <run>Æ&#10;</run>
            <run fontcolor='#1d1c1d' fontname='Slack-Lato' fontsize='11'>●Sorting from the sort menu</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample - Superstore)' name='federated.15sv1od1ldj4ea10rck7l1t2p62i' />
          </datasources>
          <datasource-dependencies datasource='federated.15sv1od1ldj4ea10rck7l1t2p62i'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column aggregate-role-from='[State]' datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <computed-sort column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Category:nk]' direction='ASC' using='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[sum:Profit:qk]' />
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Category:nk]' value='28' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Region:nk] / [federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Category:nk])</rows>
        <cols>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{20DC8564-CD48-4C80-8DC8-AD7DD9692A8A}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sorting'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Region:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='2147483647'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Category:nk]</field>
            <field>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CA9E01E6-B901-4507-9476-5AF85AF9DE11}' />
    </window>
    <window class='worksheet' name='Hierarchy'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[sum:Sales:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:City:nk]</field>
            <field>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Country/Region:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{6CA569B1-5961-4837-AED3-5AD8A8885E4A}' />
    </window>
    <window class='worksheet' name='Group/View'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[Sub-Category (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6A92A67A-96DB-4689-9764-7E7D8F40CB7F}' />
    </window>
    <window class='worksheet' name='Group Ex.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[Sub-Category (group) 1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CBCC7738-0F13-4083-9790-78BC2C50DB07}' />
    </window>
    <window class='worksheet' name='Group/Create'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[Customer Name (Paul)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[Customer Name (Paul)]</field>
            <field>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Customer Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{87C9BCD3-4CDF-4165-9994-86C420ED9F0A}' />
    </window>
    <window class='worksheet' name='Fix Set'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[io:Product Name Set:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[io:Product Name Set:nk]</field>
            <field>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Product Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{28016707-AAD4-4FE9-822A-2E1136D7E62E}' />
    </window>
    <window class='worksheet' name='Fix Set Ex.1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[io:Sub-Category Set:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[io:Sub-Category Set:nk]</field>
            <field>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3F3BBCF0-C4DC-497E-8F32-92540BFDA719}' />
    </window>
    <window class='worksheet' name='Fix Set Ex.2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[io:Sub-Category Set:nk]' type='color' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[io:Sub-Category Set:nk]</field>
            <field>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{92324BBE-39C3-4D41-B8DA-685C1073BE2E}' />
    </window>
    <window class='worksheet' name='Dynamic Set &amp; Combined Set'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[io:Set 1:nk]</field>
            <field>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[io:Sub-Category Profit &gt;= 0:nk]</field>
            <field>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[io:Sub-CategorySales &gt; 100K:nk]</field>
            <field>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{586B8527-CA88-4B33-870A-BB5966838CAF}' />
    </window>
    <window class='worksheet' maximized='true' name='Dyn Combined Set Ex.'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.15sv1od1ldj4ea10rck7l1t2p62i].[io:Set 1:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[io:Set 1:nk]</field>
            <field>[federated.15sv1od1ldj4ea10rck7l1t2p62i].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C1E5FFD-F5DD-43E5-97BB-F7215E0A8813}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dyn Combined Set Ex.' width='192'>
      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
      vQ12MqWxrAkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dynamic Set &amp; Combined Set' width='192'>
      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
      B2VXSWPyCesXAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Fix Set' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Fix Set Ex.1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAdm0lEQVR4nO2dW3Cb17WYvx/AjwtBAAQBkOKdkkiRki1LlC3J9rETZ9KZk6Y+adNpJ8m0
      Tds5yfThTDuThz72qdOHPvQp58HTS6Y5GU/qXE4mPj0TpxPbURLZinzR3RQvIimRBEkQxP3+
      //h3H2gipERSvOBK7G/GYwD8tf4FYC/stdbea21FCCGQSJoUU60VkEhqiaVcgoQQGIaBYRgo
      irLjdblcDrvdXq7bPoFhGJhMlbPrSspvZN0rLX/DUdltbB2EfRtAPp1gMZykq72FtXQRn6cV
      MzrC6sRmNgNg/vz/22E2m7FYymZ3T6DresPKb2TdNwZoJeUbhrHr2DoI+zRXwdTUNK0uJ8GV
      MPlEhIXgPNMPl7Ca92aZhmEcQE2JpDLse74ymc0E5+YoAAgABSEMkLG0pAHZ53ylcOL4AKF4
      noDbRjRTpN3jxKIY5HWBXS2vfyaRVJp9O2z21jb6W9cfO1yHECSR1AFVT4NWMgshkewXORrr
      BCEEhjCQ65LVpeqei8wCPYkQgr//7Jf86rO36fcO8u/+7N/T5vDWWq2mQM4AdcBqKsT/+fRv
      iGYj3Ap+yjvjf1drlZoGaQB1wOOrm4oiv5ZqIT/pOsDvDPCvLv4lgdZOXui7zD88/Re1Vqlp
      UMq9G7RYLO66XJ3NZnE4HOW85RYaeTtBI+suhKBYLB71rRCScpDJZPj973+PrutbXpcJguoj
      s0A14Pr161y6dInp6WkikQgej4dIJEJLSwt+v5+VlRU8Hg/5fJ5wOMwXvvCFis4MzYycAWpE
      oVBgbm4OTdMIh8MArK6u8tvf/pbZ2VlCoRCdnZ0Eg0EymUyNtT26yJ+VGvDSSy9x8+ZNzp8/
      TzQaJRwO09HRgc/nQwjB/Pw8w8PDqKrK8PAwTqez1iofWaoeBKfT6Yp+oY0cSDay7jII3usN
      5V4gSR0hR6Okqdn3fJVJxolnNXxuB+m8QWuLHUUYYLFiMT29HkBmgST1xL4NYDEYpL2jm/lH
      8+Q0gdPVgpbLc2JoGCFE6b/dqOSOx73cv17lN7Lum+9RKbmV0H+fBiBwOuxMTk4T8LfhVATZ
      TArdUDEplLpC7IZhGBSLxUOovDuNLL+Rdd+QX0kqIX/fM4DVqtLZ1YW/1UIkY9DX1oUFnZwu
      cKhP7wphMpkqvqjTyPIbVfdqdIVQFKXsWaB91wT7j/Xi//yZu33/N5RZIEk9UfXRKCueJPWE
      NABJUyP9EUlTIw1A0tRU3QDK3dxUIjkM0gAkTY0MgiVHFiEEK8llHoSnKBrbLwBWvR5AGoCk
      Wnw8/0f++nf/Dc3Q+OLJL/Pdl/8K02MdN2QQLDmyvDf5azRDA+Daw6vEs7EnrpEGIDmynPAP
      lx53uo7htLY+cU3VXSAZBEuqxT85+89x2z1EMxH+wamvYLVYn7hGGoDkyKKaVf589B/teo0M
      ghuEmbVp3vz4f9PR2sm3L/0lDrWl1irVHT//+c9RFIWBgQHOnDmDyWQqjTchRGkjpq7rWK1W
      VFWVBtAIGMLgv3/w1zyKzjG+cpdj7i7+8dl/Vmu16g5d13G73SwsLLC0tIQQAl3XURQFi8XC
      zMwMra2tZLNZvvjFL/Lss8/KtiiNgBCCnJ4rPc9q2RpqU79cvnyZwcFB5ubmAFhYWEDXdQYH
      BwFwOp20traSyWRKrrhsi1JH8neT/cn8dX54/X/gc/r5D1/4j3hb9l+MIduiPMkBDECgaTpm
      k4JWFKgWMyBAMWFSlKcaQCaToaWlcv7rUTUAgIKex2QyYzEd7P7SAJ5k39qmoqvcmFigy2sj
      njHw+70Uc2n6TpzCtAfdZBZoe4QQhEIhuru7d7zGarFVUaPmYH8GIAw+G58gl9YxAgN0uCGR
      ilAUDiymdfenWCzuGujquv5EV+RyUsmi70rKj8VivPPOO3zzm9/kww8/ZHBwkGg0iq7r9Pb2
      cv/+fUZHR4nH42QyGXw+H+l0mmw2S3d3N7Ozs3R1dZFMJjl79mxVda+G/ProCqGYuPTyq0TW
      IqBnCaeL9HYPYhaaLIo/JPfv3yeTyXDlyhXOnDnD5OQkFy9e5Ac/+AEXLlwgHA4zPz9PPB7H
      brcTi8UQQhAIBLhy5QoWiwUhBPl8HrPZvONM28hF8XUSA+yODIIPRigUwuv1EgqFmJ6eLs0A
      2WyWzs5OHj58yKlTp0gkEuRyOdrb23G51g9q1jSN8fFxenp6yGaznD17dlsDkDHAk0gDqCP5
      jax7oxqALIiRNDXSACRNjawIkzQ10gAkTY0siJE0NdIAJE1N0wfBQgg0Tav4KqmkPmn6irCJ
      iQnu3LmDw+HglVdeoa2trdYqSapIUwfB2WyWmzdvksvliEaj3Llzp9YqSapMUxuAyWTacl6B
      qqo11EZSC5o6CLbZbLz88sv4/X4GBgY4d+5crVWSVJmmL4ns7e2lt7e31mpIakTTZYF0Xedn
      P/sZH3/8cU31kNQHTZcFMgwDTdOIRqN8//vf5+zZsywvL9Pb28uVK1e4ePEiiUSCr33ta1it
      TzZSkhwtmq4tiqIojI6OMjw8zPz8PKlUikwmQ7FYpLOzE5/Px9DQ0JEd/Hk9jxACu2qvtSp1
      QdPXA+i6TiwWw+/3P/3iA8jfD5WuB7izeJP/9cc30A2Nf/nCv+XFwVfKJrtR6wH2fVD20qNZ
      QimdDpfKakqnu6MdtDyuQBc2c30tcu0Fi8Wy58Hf6Pzk5puEUssAvPnJD3m+7zKqublTv/s+
      J9jlcrGwtkKhxYrfrrIcWkTQgq9zb0XxxWJRFsXXQDaAXXX86bHFjlEsoovy/Wgd/aJ4BNFY
      DEPX0bUMqymDrs4AopDZc1G8xWJpyKL1asmvpOx//cJ3+fGNH1Io5vnmhW9js5YvDpBF8Z/z
      tBggm83icDh2/PthaeS62kbWvVFjgKbeCnGUSSQS/OpXv2JpaYlcLrflb2trazXSqv5oujRo
      sxCNRikUCiwuLhIMBgmFQvT09BAOhykUCrhcLvx+PwsLC7jdbux2+44NtY4yTb0X6KjT2dlJ
      Op1mbW2NgYEBYrFYaQPg+++/z9zcHIFAAE3TmJqaOlI/TkIIlhNL3Fr8lKyW2fG6pt8LdFQ5
      duwYyWSSZ599FiEEqqrS19fH2toabrebkZERnE4nLpeLRCLB8ePHa75KX04mV8f5r7/5z+T0
      LEP+U/ynP/8v26Z8q24Am7cfSyqHzWbj2Wef3fKaxWIp9cpvb/9Te/VAIFBN1arCh7N/IKev
      n6MwHZ5kPjq35dC8DeRolBxJRjpOlx63OdrodHdte13VZwDDMKp9S0kT8uLgn2Gz2JmLzvDy
      4BdoUbffftP0e4HqSX4j696o6wAyCJYcCYQQXLt2DVhPABw/frz0t9XV1R3jHGkAkiPBhufx
      wgsv8NZbbzE7O0swGMRut3P8+HGuXLlCS0sL+Xyer3/966V/V/UgWGaBJJXAbDYTj8e5du0a
      586dIxAIoKoqVquVYrHI6OgoZ86cIRQKbdm0J/cC1ZH8Rta9UWOAqv8cyyyQpJ6Q/oikqZFB
      sOQJ3pv6f7x952/p8fTynZf+Cm+Lt9YqVQw5A0i2EMms8TfX/yeh1DI3Fj/m/97721qrVFG2
      nQHSsVX+/te/xeVw8cWvfYVynusus0D1jRACwZ/yIoY42jHbtgaQTaQRIk+m6HriguWFOcKp
      Ip0e63pRfMALegGHN9CQRfGSrficfv7F8/+Gt+/+Ld2eHv7imX9aa5UqyrZp0Kn742RyGr19
      fXh93i1+kl7IMbewjMUkUA2I5ZMIxckzIycwDINisbjrr3ylt0I8LQ1bz/LrSXdDGCgo+9oi
      XUn9Nwriy+1BbDsDBPxtfPDhR8RTOV565dImAxDcu30DkzOAXckRShc51uGjmEvJovgGkP24
      fCEEV69exeFwMDw8jNvtPrDcRi2K31bbNv8xbBaFcDCIDmwuI3juwmUEtW9xWGs2Kq38fj8t
      LeWMkqqHEIJYLIbb7ebNN9/kxRdfZG5ujoGBAVKpFNFolPb2dhKJBB6Ph5mZGUZGRrh8+XKt
      VS8bO5qr2Wyhb2gA25ZXFRSTwmGGfqV/4arB2toa7733HrlcDofDwZe//GW83sZLFSqKQnd3
      N+l0ulQ843a7MQyDixcv8tOf/hSbzYaiKEQiEQqFwpH4/jaz7bspFvLkc1mKiTQ6UM4umbqu
      Y7PZnn5hHbO2tlbqtJDNZolGow1rABcuXNjx79/+9rcRQvCHP/yB06dPH8kOettGFB99+AGq
      vYXR554r6+A/KvT19eFyuQBoa2uju7u7xhpVDkVRePXVV4/k4IcdZgBni421RIob164T+OqX
      pBE8hsPh4PXXXy/5xpXM3Egqi6wIqyP5jax7o+4GlV0hdkAIwS9+8QsuXbpU2ldeKBQwm82M
      j48zMDCA1WrF4XCQz+cxm80YhoHVaiWRSBAIBFhdXaW3t7fpM2b1zNEK6cvIRle1jz76CKfT
      WZrZNE3D7XYzNzfH4uIihUKBQCCAxWLBMAw8Hg+/+93vGBsbY2Zmhu9+97vSRapjZFeIHchm
      s3zrW98iEolw48YNTp48yfT0NCdPnqS9vb20MrnRa8cwDObm5nA6nZw+fZr+/v6Gea/NjIwB
      noIQgkKhsMUFkjHAkzRqDNAYDnkNURSltBjU6OsXkieRMcAOpFIpPv30U3Rd5/z581taCUqO
      DjILtAPXr19ncXERWHfbvvrVr8pg9gjSGKOxBuTz+S2Pj1LrcMmfkF0hduD8+fM4nU7sdjtj
      Y2NHbhOYZB2ZBdoFTdMQQmw5NFuuBG+PzAI1GJlMhvv376Np2o7XqKqKoigVP75UUjuadl5/
      8OABZrOZSCRS2s4QjUaJxWJ0d3eTTCZZW1ujvb2d2dlZXnjhBeLxOMFgkOeff54bN24wMjLC
      xMQEL7/8snSRGpR9f2vxyAqa0oqlmCSc0un0eVAMDbXVu6ei+HrJAhmGQTAYJBgM4vF4CIVC
      XL58mWg0yvLyMtFolGg0iqIoDA4OMj09zdraGiMjI7z77rucOXOGmzdvkkwmyWQyhyonlNSO
      fRuAo9VOYiWHrmWwGoJHC3MIpYVnRrx7Oile1/VdT4qfm5tjbm6OV155Zdtf1UgksmtOfq/u
      Snd3N6OjoywtLTExMcHZs2dxuVwcP34cwzDw+XxMT0/T29uL2+3G4/Fw7Ngx2tvbKRaLvPHG
      G3zjG9/AZDJhsVh2fU97pZFPua+0/EqdFL/vIDgRDTLzMIWzpUg2Z+DxetAyKfqHRrCalUMH
      wVevXsXn86EoCgsLC5w6dQqbzUYsFiOVSpFOp3G73QghSoPO4XBgMpkIh8MMDQ3R1bX9cTjl
      QAbB29OoQfC+tTVbnPT1O3C1OijoArtVxYSgXMlNk8mEqqqsra1x7NgxlpaWyGazTE5O0tHR
      gdfrZWVlBQCPx0MymeSDDz5gZGSEQqHA8vJyRQ1AcrTYtwE4XR42fr83ZQfLlk7q6elhdnaW
      5557DqvViqqqRCIRhoeHWV1dpb+/n0QigRCCiYkJRkdHOXHiBJqmkU6n6evrK5MmkmagrtYB
      Nnw8RdlfQ6bNNLIb0ci6N40LdFh2ygIlEgmuXr1KJpPh/PnznDx5Elj/0gqFAg6HQ1ZWScpO
      3SSvb926RTgcBuDjjz+mp6cHTdN4//33SafTHD9+nMuXL0sjkJSVutkLtHlm2HCBJiYmiMfj
      6LrO1NQUsVisWmpKmoSazwBCCG7fvk0oFEJRFFwuF+fPn8dms205S8xsNsuCFEnZqbkBzM/P
      c/v27dLzS5culdKYG6nNSCTCyMhIRQ/XkzQnNTeAQqGw5fnmzWkWi4WxsbFqqyRpImp+TvDA
      wAA9PT2oqsrg4OCWNoM3btwoxQzZbFYWpUjKTtVngMcHsaqqvPbaa2iahtVqLWV5NE1jenqa
      QCDArVu3CAaDvPbaawwPD1db5YZCCEEmkyGXy+H1eutm82G9UnMDgPVZ4fEAd3x8HF3X+eyz
      z+jq6qK9vb3UkFayM0tLS1y5cgVd1xkYGODVV1+VqeNdqHkMsBOjo6OcPXuWQqGAyWSiWCzu
      WrwiWWd6erq0SXB+fp5UKiV/OHahbufHDXfIZrOhqip2u11+kXvA5/OVHre0tGC322uoTf1T
      9RlATseVZXR0FIvFQjKZ5NSpU6iq+vR/1MTUxACy2ey2fr/k8JjNZkZGRmqtRsNQVRdICMH0
      9DS//OUvefvtt0uNpyT75+bNm4RCId577z0ymcyWvz169AiA1dXVWqjWUFR1BtB1vdSJQdM0
      bt++TU9PTzVVODIIIZiammJmZoaOjg7eeecdXn31VXRdZ35+nunpaXw+H9evX8dmsxEKhVBV
      lVQqxVe+8hVZNPQ5B54B0vE1HgVDZDIZ8ukk+eLTF6lMJtOW7QyV7A901FFVlXg8zuDgIMFg
      sFQSqigKp0+fxufzkUql6Ovrw+/3k81m8Xg8qKrKw4cPa61+3XDAghjBg+kHmAxBQSlSLFo4
      PXISIUQpVblZ7MbuTiEEy8vLTE5OoqoqY2NjOByOJ4qdN1+/+fWNRZ3Hd5Rufn2jIGdzUc3m
      63eSvdfXH5dfCd13ul5RlFJK+CDvxTAMLBbLgd/7097LhvztPu/Dfg9A6aT4cup+cBdIGGhF
      gcVuxdA1DAGmz7+g7TI9G8p4vV6+9KUvlV7beGOPX7vb64+vbiaTSWZmZmhra6Onp6dUlbTT
      9bvJ3+73YPPriqKUBul21+9X982vPy57p+s3f777eS8bBrZfnff6Xjbk7/Ye9yp/u8G/YQDl
      1P2ABqDQ032MRM7A0+rArBjohsBmMWEymTAMg1//+teMjY1t8fEzmQyqqpa1bE7TNN59912y
      2SwAL730EkNDQ2WTvx2VLFusdIOtSnW43hholZRfVyWRdqcb+yYXfrMgTdMIh8Pk83neeust
      RkdHWVlZYXV1laGhIRYXFzlx4gSzs7OMjIwwPj7OyZMniUajFAoFRkZGGBwc3JMeqVSqNPiB
      UmsUiWQvVCwN+uKLL6IoCpOTkzx8+JC7d+/S399PLpfj3r17rKyscOHCBWZnZ7l//z7BYJBz
      586RSqV48ODBnu/j8Xjo6OgA1gPDgYGBSr0lyRGkIl0hNgI1RVGIx+M4HA5yuRxOp5NYLIbF
      YsHhcGC1WhFCEI/HcTqdWK1WkskkNpttX0v4uq6zurpKa2srDoejYTsryK4Qu8uvhAtUV21R
      ykEtBpGmady5c4dMJsOZM2cOfJySNIDd5R+J9uiH2Qu0vLzMT37yEx49elTaHZpIJNB1nWQy
      STwe5969eywvL5NKpdB1vdREq5LcunWLe/fuMTs7y5UrV+Su1QaioTbDeb1e3G43k5OT6LrO
      3bt3gfXMg67rWK1WAoEA165d45NPPmFsbIypqSm+973vbTnkotwkk8nS41wuh6ZpchNag1AX
      BTF7JZvNYhgG7e3t3L59G6/Xy8LCAqdPn2Z8fJxz586VYgCTycSJEydKU3MlOXPmDOFwmEKh
      wKlTp2TxfgPR0DGApmklv1DXdex2e8386Hw+j6ZpOJ3Opmzr2KgxQN1WhO2FzW5GpReQNE0j
      lUo9YbwbS+o2m01u725AGtoAqsndu3dZWVnh2LFjWK1Wjh8/zoMHD/B6veRyOTo7O5mbm8Pl
      cqGqKvl8HpfLRSQSobu7m5mZGU6fPi1jgzqjoYLgWiKEoFAosLKygtfr5cc//jHnz5/nj3/8
      I0tLS4yNjdHb28vt27dZXl7G6/Xi8/n46KOPOH/+PA8fPqSvrw+v11vrtyLZhDSAPRIIBFha
      WmJ4eJjJyUlee+01JiYmeP7550s7OaempvD7/bS3t2M2m2lra+O5555jYGAAIYQ8SK8OqXoQ
      nMlkaGlpKectt9DIgWQj696oQXDVF8JkdzdJPVG3bVEkkmogDUDS1DTUXiCJpNzsO2Ip5NIU
      hAVVFIhni+sVYRgIix11DyfFSwOQ1BP7NoBsLkEsoaLn19B1QSppQ8vrDJ8aKtVt7nQMEqyv
      nO7298PytPvXs/xG1r1R5e/DAIrMTD9icOgYiWQGTGasFkGhkEMrmlFYH9xPO85+45pK8bT7
      17P8Rta90vI3ZJdb/j4MwMyJoeMszc8Qi2v09/qIZwz62loxUySnCxzqeo52t1ytyWSqWOE0
      rH9QjSq/0XWvtPy62AzX1XeCrs8PY/e0lVUXiaTqyCyQpKmRBiBpauRWCElTIw1A0tTIrRCS
      pkYagKSpkUGwpKmRBiBpamQQLGlqpAFImhoZBEuaGmkATUgul2NiYoJgMNj0M7Jsi9JkFItF
      fvOb3xCNRoH1I6U8Hg8/+tGPeP3113G73RQKBdLpNK2trei6jtPppK2tjVgsRiAQOFLfoTSA
      JiOdThOLxUrPg8EgQ0NDXLp0iba2Nt544w0uXryIqqrkcjkKhQL379/n0qVLTE9P853vfOdI
      9Teq+jupZMWQ5Om0trYSCAQIhUKYTCb6+/sB6OzsxGQyMTY2RkdHB/Pz8zzzzDMUCgWsViv9
      /f0UCoUj5zI1dHfo7Wjk5lLV0r1QKBAMBnE6nfj9/rLMyo3aGOvozGWSPWO1Wvd8CudRZ98G
      sDQ/y+Jahg6XhdWUTk+nH6OQxdczgG0PXSEkknpi30XxHZ1eAoodoefpdtsIR1cQtNBlWnd/
      isXirn6iEAJd18ug+g5aVvg0mErKb2TdKy2/ToriBxm/cxNDdeG2QyhTpKujC7TcnovizWZz
      xbMIjSy/UXXfGJhHPAZQOH12rPSs7wA3lFkgST0hV4IlTY00AElTUxGHbbdgyGKxVDRY2jit
      pRHlN7LulZZfqa5zZTeAvQQplex+1ujyG1X3jcFZ6c5zJlN5nZayrwRLJI1E1VaC9XyG6dlF
      +nu7Uaxm8jmdNndrWWSvLs0TyRgca7OzljHo8LqgqGF1tWE1HW5xLrK6hMXZTiGxSg47rRaN
      WE7B39aKUdRxujyYD3oPQ+fR4gq9vd1M3ruFr+ckmUgQd0cfVsWgoOt42w7efzIdX+PRcoz+
      bh8LK1EGewLMPlqmr6sTs9WEZqi4WqwHlh98NENRdWHKxymYnbitBhnDitflQNc0PF4vB/30
      hTCYm57E7u1EZKKYW/0ouRi6pRV3ixVN02jbh/zo6hIr8TzdXgcPV+IMDRzj4WK4ekFwaGWF
      zo525mdm+PTOPax2R9lkLy8v09rqZC2WRuTTLM7P8HA5eujBD6BaVbKpLPFMHi0VYzWeQdFS
      zE5PEgzHMR1mH40QGJqOYSQIrWm0WLIUVT/hlSC3PrmGzuHOFLbYnDhUwaPgKj67mfHZBXra
      bUw+mOPW5Cx2++Hkt7X7yWXSLK+EcDqdxFJ58uk4D6c+W/+cDiVdwWpViYVXyaOSDAdJ5iGT
      iDAzfptourAv+VarlWQ8ztLSCo7WVlZCYbrdVcwCmU0QiUSwWBz4fR7SmWyZJAu6e/tZWlzA
      0Auk8xqOVg+q0NCNw3t3hXyORDKJls+R04oYeoFMTsPV5kXR8xiH8CAFkE0nSSYNTpzs5OFC
      iEwijMCMPxAgnUofSvfw8jzC4sRmEawl0jhUE6FIEoe9hbZWG7m8dij5M9PTtPt89A0MsDj/
      iKKWI6/puL0+ivksh3GuhShisToo5HPk0il0oaDl0hR0gzafn0I2sy/5WlFgxcDT1UVudZls
      schqNFW9GEAYRSLRBG0eF5hM6JqOzXbw6XeTZLKpJHnDTItVIatBi13FhIFhtqIechaIrq2i
      CTMuh5WiYsFqKpLTFRw2FYTAZFEP7AIZeoFQOEJLqwstm8HlbSeXimNv9aCI9YNEbDbbgXVP
      J2Mk03nafW2kUjnaPE5isRRulxOTxYSmCWzWg3vBa6FlhMWBzWyA6kBFRxMW7FYzwjCwWG0c
      9OMXwiC6Fsbm9ICWxWRzgp7FMNmwWkwIw0C12tjrBJxJJchoArdDJZnV8LpbiCUyMgiWNDdy
      IUzS1EgDkDQ10gDqmEhwjiu//5BErgDAyswUicPFrZLHkBVhdUwssoaumMhHl3jz/WucCHgJ
      TT1CwYxbSdN35iIneztqrWZDI2eAOqbF7SGzMssfrn7CWiRCPFtgcTGEyWwhn47x2eRsrVVs
      eGQWqI7Zy1cj28wcDukC1TFycFee/w8sB4TNc1GECAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Fix Set Ex.2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Group Ex.' width='192'>
      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
      A56IHH3QIe9BAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Group/Create' width='192'>
      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
      eB1oQQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Group/View' width='192'>
      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
      8dmyAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Hierarchy' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sorting' width='192'>
      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
      8vzeDb66coOtfG3/dzA16rqFbRqsb2w0Isbv2ZbJ3u4WW1s71DSn1BMKzWzfFkCvbpPVk3xw
      uQ/Nkqnkd9nOVWnv6sKsVQlEgtSKVWrbYzzMRDh3tJvtzVU0VSPV1knY//pH+Ua9xtjYE2LJ
      bryRKH7Pqxswy1BZ28oQ9tlIvjZiIdHgCT+07xXhDrSRDjzkm5v3OXHqKPNTS7S0hnn0dBK/
      WmP0/dPMjk3R0vqiMbOxKRXy+N0K05qL88e6Ghe1LKNUthnbDXK8pc7EhhupukqhYpJKBdlc
      2qRo+/ndR+coF7LMPR0np6f58GI3W0YrQ5EiKzkPan6NYh0GuuNMTs7jTw9w6eSRxsUtOM6+
      XSDb1EgPnuW9E51sbGxg+WIMHOnDqJfANjE0lVJNJZFsIZHuJBnxkWzvYWSwF4+rUZNLEsFI
      nHRrCq+kU6xq2GadckWlXDU5fe4cHkXm+LnLDLeEUC2LqmYxeuosv/roV7R4LIo1A8uoUamq
      VFSJc+fOsDz1hLJmktnaQv/pIIS3yCuv1Lmn33J/NsvA0ZMMxHWu3njA8Kmz9PbEuHP7MZF0
      Gle0E3vtEXNbZVKJBLj8tMRCDQpXIhRL0pZuwRsMszf7gCs3HqIB/nCMoNcFsoLHrbw4Hf67
      X9LSuXfjJruWl53x21z/9umLo1XDMfwehXRLGwDhcKPiFpyqqVaCvwtVkiSw7R/NJEiSxL6/
      js2fSpq//8cPv8e2+dPWca+l8llVVZb/7b/DNz3zGt5NaJSmGhX+YO54nwt13/ll6Uf/+OH3
      OGReWnizmioBmo2rrQ2P6YBaIJy1+OSkWJqqC9RMxCmR+xOnRAqCQ4gEEA41MQZooOy//wfK
      M7MHHYbwCiIBGsi2LHDIIFj485qsC2RTr+RZXVmlVNMAXtQoZYtotSKb21l+6nKzbZu97XVW
      N7bRDOvn/VTLouKgqk7h9WmqBDDVCg8fPqZQzPHo4RNqusXzZ0+o6yqzT5+Rr+lsri6ivqJQ
      1Nyb49HcLoXsDnulV1S5vvw9usrE1BSlvW0yhZ/3PUJzaKouUL26SyR9nBPHWpmbeMLy9DOm
      F9YxfCEWnk7TIyfwpVxYepEb1++guxKMDsWZmFwk1NLLuZNDSN4gRmkFM3mElKfOk9kcZ7rd
      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
    </thumbnail>
  </thumbnails>
</workbook>
